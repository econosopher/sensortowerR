% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/st_metrics.R
\name{st_metrics}
\alias{st_metrics}
\title{Fetch Sensor Tower Metrics for Apps}
\usage{
st_metrics(
  app_id = NULL,
  ios_app_id = NULL,
  android_app_id = NULL,
  unified_app_id = NULL,
  start_date = NULL,
  end_date = NULL,
  countries = "US",
  date_granularity = "daily",
  auto_platform_fetch = TRUE,
  combine_platforms = TRUE,
  auth_token = Sys.getenv("SENSORTOWER_AUTH_TOKEN"),
  verbose = TRUE
)
}
\arguments{
\item{app_id}{Character string. Can be a unified app ID, iOS app ID, or Android package name.}

\item{ios_app_id}{Character string. iOS app ID (optional, improves data completeness).}

\item{android_app_id}{Character string. Android package name (optional, improves data completeness).}

\item{unified_app_id}{Deprecated. Use `app_id` instead.}

\item{start_date}{Date object or character string (YYYY-MM-DD). Start date.}

\item{end_date}{Date object or character string (YYYY-MM-DD). End date.}

\item{countries}{Character vector. Country codes (default "US").}

\item{date_granularity}{Character. One of "daily", "weekly", "monthly", "quarterly".}

\item{auto_platform_fetch}{Logical. When TRUE (default), automatically falls back
to platform-specific endpoints if unified endpoint returns no data.}

\item{combine_platforms}{Logical. When TRUE (default), combines iOS and Android data
into unified totals. The platform column is excluded from results when TRUE.}

\item{auth_token}{Character string. Sensor Tower API token.}

\item{verbose}{Logical. Print progress messages.}
}
\value{
A tibble with columns: date, country, revenue, downloads, platform (if not combined)
}
\description{
Retrieves metrics for apps. First attempts to use the unified endpoint,
but if it returns empty (which happens for all granularities currently),
automatically falls back to platform-specific endpoints and combines the results.
}
\details{
This function intelligently handles Sensor Tower's API limitations:

- First attempts the unified sales_report_estimates endpoint
- If unified returns empty (current behavior for all granularities), falls back to platform-specific endpoints
- Automatically detects app ID format and fetches appropriate data
- Combines iOS and Android data for true unified view when using fallback
- Set auto_platform_fetch = FALSE to disable automatic fallback
}
\examples{
\dontrun{
# Simple usage - function figures out the platform
metrics <- st_metrics(
  app_id = "1195621598",  # Homescapes iOS
  start_date = Sys.Date() - 30,
  end_date = Sys.Date() - 1
)

# Best practice - provide both platform IDs
metrics <- st_metrics(
  app_id = "1195621598",
  ios_app_id = "1195621598",
  android_app_id = "com.playrix.homescapes",
  start_date = Sys.Date() - 30,
  end_date = Sys.Date() - 1
)

# Keep platforms separate
metrics <- st_metrics(
  app_id = "com.king.candycrushsaga",
  combine_platforms = FALSE
)

# Force unified endpoint (will fail for daily)
metrics <- st_metrics(
  app_id = "1195621598",
  date_granularity = "monthly",
  auto_platform_fetch = FALSE
)
}

}
