% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/st_app_lookup.R
\name{st_app_lookup}
\alias{st_app_lookup}
\title{Look up app by Sensor Tower unified ID}
\usage{
st_app_lookup(
  unified_id,
  auth_token = Sys.getenv("SENSORTOWER_AUTH_TOKEN"),
  verbose = FALSE
)
}
\arguments{
\item{unified_id}{Character string. The Sensor Tower unified app ID (24-char hex format).}

\item{auth_token}{Character string. Your Sensor Tower API authentication token.}

\item{verbose}{Logical. Whether to show progress messages. Default is FALSE.}
}
\value{
A list with components:
  - `ios_app_id`: iOS app ID if found
  - `android_app_id`: Android app ID if found
  - `app_name`: App name if found
  - `publisher_name`: Publisher name if found
  Returns NULL if app cannot be found.
}
\description{
This function looks up app information using Sensor Tower's internal unified app ID
(24-character hex format like "5ba4585f539ce75b97db6bcb"). It returns platform-specific
IDs that can be used with other API functions.
}
\details{
IMPORTANT: This function only works with Sensor Tower's internal unified IDs.
Do not pass iOS app IDs or Android package names - use the appropriate
platform-specific parameters in other functions instead.
}
\examples{
\dontrun{
# Look up Star Trek Fleet Command
app_ids <- st_app_lookup("5ba4585f539ce75b97db6bcb")

# Use the IDs with st_ytd_metrics
if (!is.null(app_ids)) {
  metrics <- st_ytd_metrics(
    ios_app_id = app_ids$ios_app_id,
    android_app_id = app_ids$android_app_id,
    years = 2025,
    metrics = "revenue",
    countries = "WW"
  )
}
}

}
